apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes  auto;
    error_log  /var/log/nginx/error.log;
    events {
      worker_connections  1024;
    }
    http {
        log_format json escape=json '{"time": "$time_iso8601", '
          '"host": "$remote_addr", '
          '"vhost": "$host", '
          '"user": "$remote_user", '
          '"status": "$status", '
          '"protocol": "$server_protocol", '
          '"method": "$request_method", '
          '"path": "$request_uri", '
          '"req": "$request", '
          '"size": "$body_bytes_sent", '
          '"reqtime": "$request_time", '
          '"apptime": "$upstream_response_time", '
          '"ua": "$http_user_agent", '
          '"forwardedfor": "$http_x_forwarded_for", '
          '"forwardedproto": "$http_x_forwarded_proto", '
          '"referrer": "$http_referer"}';

      access_log    /var/log/nginx/access.log json;

      server {
          listen       80;
          server_name  localhost;

          location / {
              root   /usr/share/nginx/html;
              index  index.html index.htm;
          }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx
          readOnly: true
          name: nginx-conf
      volumes:
      - name: nginx-conf
        configMap: 
          name: nginx-conf
          items:
            - key: nginx.conf
              path: nginx.conf
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80